plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.flywaydb.flyway' version '8.5.13' 
}

group = 'com.task'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'org.json:json:20210307'
    implementation 'org.flywaydb:flyway-core'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-orgjson:0.11.2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mockito:mockito-core:4.5.1'
    testImplementation 'com.h2database:h2'
    
}
def flywayProfile = project.findProperty('flywayProfile') ?: 'main'


flyway {
    if (flywayProfile == 'main') {
        url = 'jdbc:postgresql://172.31.6.165:5432/taskmanager'
        user = 'skoroule'
        password = 'k6567syY'
        locations = ['filesystem:src/main/resources/db/migration']
    } else if (flywayProfile == 'test') {
        url = 'jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1'
        user = 'sa'
        password = ''
        locations = ['filesystem:src/main/resources/db/migration/H2']
    }
}


test {
    useJUnitPlatform()
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
        showStandardStreams = true 
    }
}